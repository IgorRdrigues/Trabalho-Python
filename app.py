import streamlit as st
import pandas as pd
import numpy as np
from pathlib import Path

# Configura√ß√£o da p√°gina
st.set_page_config(
    page_title="Aplicativo de An√°lise de Dados",
    page_icon="üìä",
    layout="wide",
    initial_sidebar_state="expanded"
)

# Inicializa√ß√£o das vari√°veis de estado da sess√£o
if 'data' not in st.session_state:
    st.session_state.data = None
if 'filename' not in st.session_state:
    st.session_state.filename = None
if 'columns' not in st.session_state:
    st.session_state.columns = []
if 'numeric_columns' not in st.session_state:
    st.session_state.numeric_columns = []
if 'categorical_columns' not in st.session_state:
    st.session_state.categorical_columns = []

# Cabe√ßalho da p√°gina principal
st.title("üìä Aplicativo de An√°lise e Visualiza√ß√£o de Dados")
st.markdown("""
Este aplicativo permite carregar, analisar, visualizar e exportar dados.
Use a barra lateral para navegar pelas diferentes se√ß√µes.
""")

# Verificar se os dados foram carregados
if st.session_state.data is not None:
    st.success(f"Dados carregados: {st.session_state.filename}")
    
    # Exibir amostra de dados
    st.subheader("Amostra de Dados")
    st.dataframe(st.session_state.data.head(10))
    
    # Exibir informa√ß√µes sobre os dados
    st.subheader("Informa√ß√µes dos Dados")
    col1, col2, col3 = st.columns(3)
    with col1:
        st.metric("Linhas", st.session_state.data.shape[0])
    with col2:
        st.metric("Colunas", st.session_state.data.shape[1])
    with col3:
        st.metric("Valores Ausentes", st.session_state.data.isna().sum().sum())
    
    # Fornecer links para outras se√ß√µes se os dados estiverem carregados
    st.subheader("O que voc√™ gostaria de fazer?")
    cols = st.columns(3)
    with cols[0]:
        st.markdown("[![An√°lise](https://img.shields.io/badge/Ir%20para-An√°lise-blue?style=for-the-badge)](Data_Analysis)")
    with cols[1]:
        st.markdown("[![Visualiza√ß√£o](https://img.shields.io/badge/Ir%20para-Visualiza√ß√£o-green?style=for-the-badge)](Data_Visualization)")
    with cols[2]:
        st.markdown("[![Exportar](https://img.shields.io/badge/Ir%20para-Exportar-orange?style=for-the-badge)](Data_Export)")
else:
    # Instru√ß√µes quando n√£o h√° dados carregados
    st.info("Por favor, carregue seu arquivo de dados usando a se√ß√£o Upload na barra lateral.")
    
    # Criar estrutura de pastas se n√£o existir
    Path("pages").mkdir(exist_ok=True)
    
    # Demonstra√ß√£o r√°pida com dados de exemplo
    if st.button("Carregar Dados de Exemplo para Demonstra√ß√£o"):
        sample_data = pd.DataFrame({
            'Categoria': ['A', 'B', 'A', 'C', 'B', 'C'],
            'Valor1': [10, 20, 15, 25, 30, 35],
            'Valor2': [100, 200, 150, 250, 300, 350],
            'Data': pd.date_range(start='2023-01-01', periods=6)
        })
        
        st.session_state.data = sample_data
        st.session_state.filename = "dados_exemplo.csv"
        st.session_state.columns = sample_data.columns.tolist()
        st.session_state.numeric_columns = sample_data.select_dtypes(include=['int64', 'float64']).columns.tolist()
        st.session_state.categorical_columns = sample_data.select_dtypes(include=['object', 'category']).columns.tolist()
        
        st.success("Dados de exemplo carregados com sucesso!")
        st.rerun()

# Navega√ß√£o na barra lateral
st.sidebar.title("Navega√ß√£o")
st.sidebar.markdown("---")
st.sidebar.info("Carregue seus dados e explore as diferentes se√ß√µes para analisar e visualizar.")
